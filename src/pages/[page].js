import ProductCard from "@/components/Card/ProductCard";
import { API, APP_NAME } from "@/config";
import { Pagination, Select } from "antd";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";

export default function Home({
  latestPhones,
  topCategories,
  total,
  allCategories,
  popularPhones,
}) {
  const Router = useRouter();
  const { query } = Router;
  const page = query.page || 1;
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    const start = () => {
      console.log("start");
      setLoading(true);
    };

    const end = () => {
      console.log("finished");
      setLoading(false);
    };

    Router.events.on("routeChangeStart", start);
    Router.events.on("routeChangeComplete", end);
    Router.events.on("routeChangeError", end);
    return () => {
      Router.events.off("routeChangeStart", start);
      Router.events.off("routeChangeComplete", end);
      Router.events.off("routeChangeError", end);
    };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [Router.isReady]);

  if (Router.isFallback || loading) return <div>Loading...</div>;

  return (
    <>
      <Head>
        <title>{APP_NAME} - Find Your Dream Phone</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="flex md:hidden gap-5 py-3 overflow-x-auto max-w-7xl mx-auto    px-4 sm:px-6 lg:px-8">
          {topCategories.map((category) => (
            <div
              key={category._id}
              className="bg-gray-300 hover:bg-gray-400 text-gray-800 py-1 px-3 rounded-full inline-flex items-center text-xs"
            >
              <Link href={`/brand/${category._id}`}>
                <h3>{category.brandName}</h3>
              </Link>
            </div>
          ))}
        </div>
        <div className="grid md:pt-5 gap-5 grid-cols-1 md:grid-cols-12">
          <div className="col-span-1 md:col-span-9  ">
            <div className="mb-2  bg-white rounded-[4px] shadow-sm  mx-3 md:mx-12 flex justify-between items-center px-3 ">
              <h2 className="text-[16px] font-bold  text-gray-700  p-3 ">
                Latest Phones
              </h2>
              <Select
                defaultValue="Latest"
                style={{ width: 120 }}
                onChange={() => {
                  console.log(11);
                }}
                options={[
                  { value: "Latest", label: "Latest" },
                  { value: "Price: Low to High", label: "Price: Low to High" },
                  { value: "Price: High to Low", label: "Price: High to Low" },
                ]}
              />
            </div>
            <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5   gap-5 p-3  md:p-12 pt-3 md:pt-3 ">
              {latestPhones.map((phone) => (
                <ProductCard key={phone._id} phone={phone} />
              ))}
            </div>
            <div className=" p-3  md:p-12 pt-3 md:pt-3  rounded-[4px]  ">
              <div className="flex justify-center p-[20px] bg-white shadow-sm rounded-[4px]">
                <Pagination
                  defaultCurrent={page}
                  onChange={(number) => {
                    Router.push(`/${number}`);
                  }}
                  total={total}
                  pageSize={28}
                />
              </div>
            </div>
          </div>
          <div className="col-span-1 md:col-span-3 rounded-[4px] bg-white  h-fit   shadow-sm  md:flex flex-col gap-5 p-3    pt-3 md:pt-3">
            <h2 className="">
              <span className="text-[#ef4a23] font-bold px-1">Categories</span>
            </h2>
            <div className="grid grid-cols-3 gap-3 font-bold text-center ">
              {allCategories.map(
                (category) =>
                  category.brandName && (
                    <div
                      key={category._id}
                      className=" border border-gray-200  hover:bg-gray-200 text-gray-800 py-1 px-3 flex justify-center items-center  cursor-pointer   text-xs"
                    >
                      <Link className=" " href={`/brand/${category._id}`}>
                        <h3 className="text-center">{category.brandName}</h3>
                      </Link>
                    </div>
                  )
              )}
            </div>
          </div>
        </div>
      </main>
    </>
  );
}

export async function getStaticProps({ params }) {
  const res = await fetch(`${API}/home?page=${params.page || ""}`);
  const { topCategories, allCategories, popularPhones, latestPhones, total } =
    await res.json();

  return {
    props: {
      topCategories,
      allCategories,
      popularPhones,
      latestPhones,
      total,
    },
    revalidate: 10,
  };
}

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: true,
  };
}
